/*
 *  PCPermission.java
 *  
 *  @author Channa Mohan
 *     hjchanna@gmail.com
 *  
 *  Created on Jan 22, 2015, 9:12:13 AM
 *  Copyrights channa mohan, All rights reserved.
 *  
 */
package com.mac.zsystem.permission.user_role_permission;

import com.mac.af.core.database.DatabaseException;
import com.mac.af.panel.object.AbstractObjectCreator;
import com.mac.af.panel.object.ObjectCreatorException;
import com.mac.zsystem.permission.object.RPermission;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author mohan
 */
public class PCPermission extends AbstractObjectCreator<RPermission> {

    /**
     * Creates new form PCPermission
     */
    public PCPermission() {
        initComponents();

        initOthers();
    }

    private List getPermission() {
        try {
            return getCPanel().getDatabaseService().getCollection(RPermission.class);
        } catch (DatabaseException ex) {
            return new ArrayList();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initOthers() {
        cboPermission.setExpressEditable(true);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cDLabel1 = new com.mac.af.component.derived.display.label.CDLabel();
        cboPermission = new com.mac.af.component.derived.input.combobox.CIComboBox(){
            @Override
            public List getComboData(){
                return getPermission();
            }
        };

        cDLabel1.setText("Permission :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cDLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboPermission, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboPermission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cDLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mac.af.component.derived.display.label.CDLabel cDLabel1;
    private com.mac.af.component.derived.input.combobox.CIComboBox cboPermission;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setNewMood() {
    }

    @Override
    public void setEditMood() {
    }

    @Override
    public void setIdleMood() {
    }

    @Override
    public void resetFields() {
    }

    @Override
    protected void setValueAbstract(RPermission value) throws ObjectCreatorException {
    }

    @Override
    protected RPermission getValueAbstract() throws ObjectCreatorException {
        return (RPermission) cboPermission.getCValue();
    }

    @Override
    protected void initInterface() throws ObjectCreatorException {
    }

    @Override
    protected void initObject() throws ObjectCreatorException {
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mac.registration.sub_category;

import com.mac.af.core.ApplicationException;
import com.mac.af.core.database.hibernate.HibernateDatabaseService;
import com.mac.af.core.message.mOptionPane;
import com.mac.af.panel.object.CInputComponentBinder;
import com.mac.af.panel.object.DefaultObjectCreator;
import com.mac.af.panel.object.ObjectCreatorException;
import com.mac.model.table_model.sub_category.SubCategoryTableModel;
import com.mac.registration.company.PCCompany;
import com.mac.registration.sub_category.object.MSubCategory;
import com.mac.zsystem.settings.system_settings.SystemSettingInterface;
import com.mac.zsystem.settings.system_settings.object.RSystemSetting;
import com.mac.zsystem.util.hash.HashUtil;
import com.mac.zsystem.util.index.AutoCodeUtil;
//import com.mac.registration.sub_category.object.MMainCategory;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author thilanga
 */
public class PCSubCategory extends DefaultObjectCreator<MSubCategory> {

    /**
     * Creates new form PCSubCategory
     */
    public PCSubCategory() {
        initComponents();
        initOthers();
    }

    private List getMainCategory() {
        List mainCategory;
        try {
            String hql = "FROM com.mac.registration.sub_category.object.MMainCategory where active =true and branch ='"+HashUtil.getBranch()+"'";
            HibernateDatabaseService databaseService = getCPanel().getDatabaseService();
            mainCategory = databaseService.getCollection(hql);
        } catch (Exception ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
            mainCategory = new ArrayList();
        }
        return mainCategory;
    }

    @SuppressWarnings("unchecked")
    private void initOthers() {
        cboMainCategory.setExpressEditable(true);
        cboMainCategory.setTableModel(new SubCategoryTableModel());


//        set max text lengh
        txtCode.setLength(10);
        txtSubCategoryName.setLength(50);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cDLabel1 = new com.mac.af.component.derived.display.label.CDLabel();
        txtCode = new com.mac.af.component.derived.input.textfield.CIStringField();
        cDLabel2 = new com.mac.af.component.derived.display.label.CDLabel();
        txtSubCategoryName = new com.mac.af.component.derived.input.textfield.CIStringField();
        chkActive = new com.mac.af.component.derived.input.checkbox.CICheckBox();
        cDLabel3 = new com.mac.af.component.derived.display.label.CDLabel();
        cboMainCategory = new com.mac.af.component.derived.input.combobox.CIComboBox(){

            @Override
            public List getComboData(){
                return getMainCategory();
            }
        };

        cDLabel1.setText("Code:");

        cDLabel2.setText("Name:");

        chkActive.setText("Active");

        cDLabel3.setText("Main Category:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cDLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cDLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cDLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(chkActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboMainCategory, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                            .addComponent(txtSubCategoryName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cDLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboMainCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cDLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cDLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSubCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mac.af.component.derived.display.label.CDLabel cDLabel1;
    private com.mac.af.component.derived.display.label.CDLabel cDLabel2;
    private com.mac.af.component.derived.display.label.CDLabel cDLabel3;
    private com.mac.af.component.derived.input.combobox.CIComboBox cboMainCategory;
    private com.mac.af.component.derived.input.checkbox.CICheckBox chkActive;
    private com.mac.af.component.derived.input.textfield.CIStringField txtCode;
    private com.mac.af.component.derived.input.textfield.CIStringField txtSubCategoryName;
    // End of variables declaration//GEN-END:variables

    @Override
    protected List getIdentityComponents() {
        return Arrays.asList(txtCode);
    }

    @Override
    protected List getEssentialComponents() {
        return Arrays.asList(
                cboMainCategory,
                txtSubCategoryName);
    }

    @Override
    protected List getOtherFieldComponents() {
        return Arrays.asList(
                chkActive);
    }

    @Override
    protected List getInputComponentBinders() {
        return Arrays.asList(
                new CInputComponentBinder(txtCode, "code"),
                new CInputComponentBinder(txtSubCategoryName, "name"),
                new CInputComponentBinder(cboMainCategory, "MMainCategory"),
                new CInputComponentBinder(chkActive, "active"));
    }

    @Override
    protected Class getObjectClass() {
        return MSubCategory.class;
    }

    @Override
    protected void afterInitObject(MSubCategory object) throws ObjectCreatorException {
        object.setHash(HashUtil.getHash(object.getCode()));
        object.setBranch(HashUtil.getBranch());
    }

    @Override
    public void setNewMood() {
        super.setNewMood();

//        RSystemSetting systemSetting = SystemSettingInterface.getSystemSetting(SystemSettingInterface.SUB_CATEGORY_AUTO_CODE);
//        if (!systemSetting.getValue().isEmpty()) {
//            try {
//                String code = AutoCodeUtil.getCode(systemSetting, "m_sub_category", "branch='" + HashUtil.getBranch() + "'");
//                txtCode.setCValue(code);
//            } catch (ApplicationException ex) {
//                Logger.getLogger(PCCompany.class.getName()).log(Level.SEVERE, null, ex);
//
//                mOptionPane.showMessageDialog(null, "Unable to auto create code. Please check settings.", "Code Generator", mOptionPane.WARNING_MESSAGE);
//            }
//        }

        int number = SystemSettingInterface.getSystemSetting(SystemSettingInterface.SUB_CATEGORY_AUTO_CODE).valueAsInteger();
        String prefix = "";
        if (number != 0) {
            try {
                String code = AutoCodeUtil.getCode(prefix, number, "m_sub_category", "branch='" + HashUtil.getBranch() + "'");
                txtCode.setCValue(code);
            } catch (ApplicationException ex) {
                Logger.getLogger(PCCompany.class.getName()).log(Level.SEVERE, null, ex);
                mOptionPane.showMessageDialog(null, "Unable to auto create code. Please check settings.", "Code Generator", mOptionPane.WARNING_MESSAGE);
            }
        }
    }
}

package com.mac.transaction.item_transaction_new.object;

/**
  *	@author Channa Mohan
  *	
  *	Created On Mar 20, 2015 9:41:46 AM 
  *	Mohan Hibernate Mapping Generator
  */


import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * TTransactionDetail generated by hbm2java
 */
public class TTransactionDetail  implements java.io.Serializable {


     private Integer indexNo;
     private MItemBatch MItemBatch;
     private MStore MStoreByOutStore;
     private MStore MStoreByInStore;
     private MItem MItem;
     private TTransactionSummary TTransactionSummary;
     private Double price;
     private Integer quantity;
     private Double discount;
     private Date expireDate;
     private Double netValue;
     private Double avaragePrice;
     private Set<TSerialMovement> TSerialMovements = new HashSet<TSerialMovement>(0);

    public TTransactionDetail() {
    }

    public TTransactionDetail(MItemBatch MItemBatch, MStore MStoreByOutStore, MStore MStoreByInStore, MItem MItem, TTransactionSummary TTransactionSummary, Double price, Integer quantity, Double discount, Date expireDate, Double netValue, Double avaragePrice, Set<TSerialMovement> TSerialMovements) {
       this.MItemBatch = MItemBatch;
       this.MStoreByOutStore = MStoreByOutStore;
       this.MStoreByInStore = MStoreByInStore;
       this.MItem = MItem;
       this.TTransactionSummary = TTransactionSummary;
       this.price = price;
       this.quantity = quantity;
       this.discount = discount;
       this.expireDate = expireDate;
       this.netValue = netValue;
       this.avaragePrice = avaragePrice;
       this.TSerialMovements = TSerialMovements;
    }
   
    public Integer getIndexNo() {
        return this.indexNo;
    }
    
    public void setIndexNo(Integer indexNo) {
        this.indexNo = indexNo;
    }
    public MItemBatch getMItemBatch() {
        return this.MItemBatch;
    }
    
    public void setMItemBatch(MItemBatch MItemBatch) {
        this.MItemBatch = MItemBatch;
    }
    public MStore getMStoreByOutStore() {
        return this.MStoreByOutStore;
    }
    
    public void setMStoreByOutStore(MStore MStoreByOutStore) {
        this.MStoreByOutStore = MStoreByOutStore;
    }
    public MStore getMStoreByInStore() {
        return this.MStoreByInStore;
    }
    
    public void setMStoreByInStore(MStore MStoreByInStore) {
        this.MStoreByInStore = MStoreByInStore;
    }
    public MItem getMItem() {
        return this.MItem;
    }
    
    public void setMItem(MItem MItem) {
        this.MItem = MItem;
    }
    public TTransactionSummary getTTransactionSummary() {
        return this.TTransactionSummary;
    }
    
    public void setTTransactionSummary(TTransactionSummary TTransactionSummary) {
        this.TTransactionSummary = TTransactionSummary;
    }
    public Double getPrice() {
        return this.price;
    }
    
    public void setPrice(Double price) {
        this.price = price;
    }
    public Integer getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }
    public Double getDiscount() {
        return this.discount;
    }
    
    public void setDiscount(Double discount) {
        this.discount = discount;
    }
    public Date getExpireDate() {
        return this.expireDate;
    }
    
    public void setExpireDate(Date expireDate) {
        this.expireDate = expireDate;
    }
    public Double getNetValue() {
        return this.netValue;
    }
    
    public void setNetValue(Double netValue) {
        this.netValue = netValue;
    }
    public Double getAvaragePrice() {
        return this.avaragePrice;
    }
    
    public void setAvaragePrice(Double avaragePrice) {
        this.avaragePrice = avaragePrice;
    }
    public Set<TSerialMovement> getTSerialMovements() {
        return this.TSerialMovements;
    }
    
    public void setTSerialMovements(Set<TSerialMovement> TSerialMovements) {
        this.TSerialMovements = TSerialMovements;
    }





	@Override
	public boolean equals(Object other) {
		if (this == other){
			return true;
		}
			 
		if (other == null){
			return false;
		}
		
		if ( !(other instanceof TTransactionDetail) ){
			return false;
		}
		
		TTransactionDetail castOther = ( TTransactionDetail ) other; 

		if(this.indexNo==null && castOther.indexNo==null) {
			return false;
		}
		
		if(!java.util.Objects.equals(this.indexNo, castOther.indexNo)) {
			return false;
		}
			 
		return true;
	}

    @Override
    public int hashCode() {
        int result = 17;
        
		result = result * 17 + java.util.Objects.hashCode(this.indexNo);

        return result;
    }





}


